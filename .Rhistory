iris
iris <- iris
iris <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"), header = FALSE) - Read more at: http://scl.io/raimhAbo#gs.txbjCwo
iris <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"), header = FALSE)
str(iris)
names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
str(iris)
install.packages(ggvis)
install.packages("ggivs")
library(ggvis)
install.packages("ggvis")
library(ggvis)
iris <- read.csv(url("http://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data"), header = FALSE)
names(iris) <- c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width", "Species")
str(iris)
?ggvis
iris %>% ggvis(~Sepal.Length, ~Sepal.Width, fill = ~Species) %>% layer_points()
iris %>% ggvis(~Petal.Length, ~Petal.Width, fill = ~Species) %>% layer_points()
table(iris$Species)
summary(iris)
library(class)
set.seed(1234)
?sample
ind <- sample(2, nrow(iris), replace = TRUE, prob = c(.67, .33))
irisTrain <- iris[ind == 1, 1:4]
irisTest <- isis[ind == 2, 1:4]
irisTest <- iris[ind == 2, 1:4]
?knn
dependent <- c("ggmap", "data.table", "reshape2", "ggplot2", "dplyr", "forecast", "quantmod",
"tseries", "stats", "dynlm", "vars")
lapply(dependent, library, character.only = TRUE)
bsbTheme <- function() {
set1 = brewer.pal("PuBu", n = 9)
set2 = brewer.pal("RdGy", n = 11)
set3 = brewer.pal("Greys", n = 9)
panelColor = set3[1]
background = set2[7]
majorTheme = set2[8]
axisTextColor = set2[9]
axisTitle = set1[8]
title = set1[9]
theme_bw(base_size = 11) +
# chart region
theme(panel.background = element_rect(fill = panelColor, color = panelColor)) +
theme(plot.background = element_rect(fill = background, color = background)) +
theme(panel.border = element_rect(color = background)) +
# grid
theme(panel.grid.major = element_line(color = majorTheme, size = .25)) +
theme(panel.grid.minor = element_blank()) +
theme(axis.ticks = element_blank()) +
# legend
theme(legend.position = "right") +
theme(legend.background = element_rect(fill = background)) +
theme(legend.text = element_text(size = 7, color = axisTextColor)) +
# title and axis
theme(plot.title = element_text(color = title, size = 16, vjust = 1.25)) +
theme(axis.text.x = element_text(size = 10, color = axisTextColor)) +
theme(axis.text.y = element_text(size = 10, color = axisTextColor)) +
theme(axis.title.x = element_text(size = 12, color = title, vjust = 0)) +
theme(axis.title.y = element_text(size = 12, color = title, vjust = 1.25)) +
# margins
theme(plot.margin = unit(c(0.35, 0.2, 0.3, 0.5), "cm"))
# chart fonts
#theme(text = element_text(familiy = "Times"))
}
setwd("~/crime")
