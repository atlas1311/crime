install.packages("KernSmooth")
license(KernSmooth)
license("KernSmooth")
KernSmooth
"KernSmooth"
help("KernSmooth")
??KernSmooth
??"KernSmooth"
library(KernSmooth)
clear
install.packages("knit")
install.packages(c("boot", "class", "cluster", "foreign", "lattice", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial"))
install.packages("knit")
library(knitr)
install.packages("knitr")
library("RCurl", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
dat <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", ssl.verifypeer = FALSE)
DAT
dat
dat <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", curl = TRUE, ssl.verifypeer = FALSE)
dat <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", method = "curl", ssl.verifypeer = FALSE)
read <- read.fwf(dat, 1, header = TRUE, sep = "/t", skip = 0)
read <- read.fwf(dat, 10, header = TRUE, sep = "/t", skip = 0)
dat <- getURL("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", ssl.verifypeer = FALSE)
read <- read.fwf(dat, 1, header = TRUE, sep = "/t", skip = 0)
read <- read.fwf(dat, 1, header = TRUE, sep = "\t", skip = 0)
read <- read.fwf(dat, widths = c(9, 7, 7, 7, 7), header = TRUE, sep = "\t", skip = 0)
read <- read.fwf(dat, widths = c(9, 7, 7, 7), header = TRUE, sep = "\t", skip = 0)
dat
read <- read.fwf(dat, widths = c(10, 7, 7, 7), header = TRUE)
read <- read.fwf(dat, widths = c(14, 13, 13, 13, 13), header = TRUE)
dat <- getURL("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for", ssl.verifypeer = FALSE)
record <- read.fwf(file = url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"), skip = 4, widths = c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(record)
colSums(record)
colSums(record[4])
colSums(record[3])
colSums(record[5])
view(record)
View(record)
record <- read.fwf(file = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths = c(12, 7, 4, 9, 4, 9, 4, 9, 4))
record <- read.fwf(file = url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"), skip = 4, widths = c(12, 7, 4, 9, 4, 9, 4, 9, 4))
colSums(record[4])
idaho2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./idaho2.csv", method = "CURL")
idaho2 <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./idaho2.csv", method = "curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./idaho2.csv", method = "curl")
idaho <- read.csv("~/datasciencecoursera/GettingAndCleaningData/idaho2.csv")
idaho <- read.csv("~/datasciencecoursera/GettingAndCleaningData/idaho2.csv")
head(idaho)
idaho["ACR"]
idaho[11]
idaho[11] == 3
View(idaho)
idaho[11] == 3, idaho[12] == 6
idaho[12] == 6
agricultureLogical <- which(idaho[11, 12] == c(3, 6), arr.ind = TRUE, useName = TURE)
agricultureLogical
standNames <- c("season", "team", "G", "AB", "PA", "H", "1B", "2B", "3B", "HR", "R", "RBI", "BB", "IBB", "SO", "HBP", "SF",
"SH", "GDP", "SB", "CS", "AVG")
base <- c(canoURL <- "http://www.fangraphs.com/statss.aspx?playerid=3269&position=2B",
cruzURL <- "http://www.fangraphs.com/statss.aspx?playerid=2434&position=OF",
norrisURL <- "http://www.fangraphs.com/statss.aspx?playerid=6867&position=C")
player <- lapply(base, readHTMLTable)
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
player <- lapply(base, readHTMLTable)
library("XML", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
player <- lapply(base, readHTMLTable)
player[1]
library(XML)
library(ggplot2)
library(stringr)
library(reshape2)
library(data.table)
library(plyr)
library(timeline)
scotusURL <- "http://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
justices <- readHTMLTable(scotusHTML, stringsAsFactors = FALSE) [[2]]
justices1 <- justices[, c("Judge", "Born/Died", "Active service", "Chief Justice", "Appointed by", "Reason for\ntermination")]
names(justices1) <- c("Judge", "BornDied", "Active Service", "Chief Justice", "Appointed By", "Reason for Termination")
justices1$Born <- str_sub(justices1$BornDied, start = 1, end = 4)
justices1$Died <- str_sub(justices1$BornDied, start = -4, end = -1)
justices1[103:114, 8] <- "2015"
justices1$BornDied <- NULL
justices1 <- data.frame(justices1, colsplit(justices1[, 2], pattern = "\\(", names = c("StartEnd", "Tenure")))
justices1$StartDate <- str_sub(justices1$StartEnd, start = 1, end = 4)
justices1$EndDate <- str_sub(justices1$StartEnd, start = -4, end = -1)
justices1$EndDate <- sub(pattern = "sent", replacement = "2015", x = justices1$EndDate)
justices1$Tenure <- sub(pattern = ")", replacement = "", x = justices1$Tenure)
justices1$Active.Service <- NULL
justices1$StartEnd <- NULL
justices1 <- data.frame(justices1, colsplit(justices1[, 1], pattern = ",", names = c("Justice", "Name")))
justices1$Name <- NULL
justices1$StartDate <- as.Date(justices1$StartDate, "%Y")
justices1$EndDate <- as.Date(justices1$EndDate, "%Y")
scotus <- data.frame(president = justices1$Appointed.By, judge = justices1$Justice, StartDate = justices1$StartDate,
EndDate = justices1$EndDate)
scotusModern <- scotus[scotus$StartDate >= "1933-01-01", ]
timeline(scotusModern, label.col = "judge", group.col = "president", start.col = "StartDate", end.col = "EndDate",
num.label.steps = 15)
timeline(scotus, label.col = "judge", group.col = "president", start.col = "StartDate", end.col = "EndDate",
num.label.steps = 15)
ggplot(scotusModern) +
geom_segment(aes(x = StartDate, xend = EndDate, y = judge, yend = judge, colour = president), size = 3) +
facet_grid(president ~ ., scale = "free_y", space = "free_x") +
xlab("Year") + ylab("Justice") +
ggplot(scotusModern) +
geom_segment(aes(x = StartDate, xend = EndDate, y = judge, yend = judge, colour = president), size = 3) +
facet_grid(president ~ ., scale = "free_y", space = "free_x") +
xlab("Year") + ylab("Justice") #+
View(scotusModern)
scotusModern[25]
scotusModern[25, ]
scotusModern$president[25]
class(scotusModern$president)
library(XML)
library(ggplot2)
library(stringr)
library(reshape2)
library(data.table)
library(plyr)
library(timeline)
scotusURL <- "http://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
justices <- readHTMLTable(scotusHTML, stringsAsFactors = FALSE) [[2]]
justices1 <- justices[, c("Judge", "Born/Died", "Active service", "Chief Justice", "Appointed by", "Reason for\ntermination")]
names(justices1) <- c("Judge", "BornDied", "Active Service", "Chief Justice", "Appointed By", "Reason for Termination")
justices1$Born <- str_sub(justices1$BornDied, start = 1, end = 4)
justices1$Died <- str_sub(justices1$BornDied, start = -4, end = -1)
justices1[103:114, 8] <- "2015"
justices1$BornDied <- NULL
scotusHTML <- htmlParse(scotusURL)
scotusURL <- "http://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
s
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
justices <- readHTMLTable(scotusHTML, stringsAsFactors = FALSE) [[2]]
scotusURL <- "http://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusHTML <- htmlParse(scotusURL)
justices <- readHTMLTable(scotusHTML, stringsAsFactors = FALSE) [[2]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[2]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE)
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[1]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[3]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[4]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [2]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [3]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[[2]]]
justices <- readHTMLTable(scotusHTML, as.data.frame = TRUE) [[1]]
my.var = 100
library(XML)
library(ggplot2)
library(stringr)
library(reshape2)
library(data.table)
library(plyr)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
justices <- readHTMLTable(scotusURL, as.data.frame = TRUE)
scotusURL <- getURL("https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States")
library(RCurl)
scotusURL <- getURL("https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States")
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
justicesTable <- readHTMLTable(scoturURL, which = 1, stringsAsFactors = FALSE)
justicesTable <- readHTMLTable(scotusURL, which = 1, stringsAsFactors = FALSE)
justiceTable <- readHTMLTable(scotusURL, which = 1, stringsAsFactors = FALSE)
justiceTable <- readHTMLTable(scotusURL, which = 1, stringsAsFactors = FALSE)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusData <- getURL(scotusURL, ssl.verifypeer = FALSE)
scotusDoc <- htmlParse(justiceData)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusData <- getURL(scotusURL, ssl.verifypeer = FALSE)
scotusDoc <- htmlParse(scotusData)
scotusData <- doc['//table[@class="yfnc_datamodoutline1"]']
scotusData <- scotusDoc['//table[@class="yfnc_datamodoutline1"]']
scotusTable <- readHTMLTable(scotusData[[1]], stringsAsFactors = FALSE)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusData <- getURL(scotusURL, ssl.verifypeer = FALSE)
scotusDoc <- htmlParse(scotusData)
scotusData <- scotusDoc['//table[@class="wikitable"]']
scotusTable <- readHTMLTable(scotusData[[1]], stringsAsFactors = FALSE)
scotusURL <- "https://en.wikipedia.org/wiki/List_of_Justices_of_the_Supreme_Court_of_the_United_States"
scotusData <- getURL(scotusURL, ssl.verifypeer = FALSE)
scotusDoc <- htmlParse(scotusData)
scotusData <- scotusDoc['//table[@class=wikitable]']
scotusTable <- readHTMLTable(scotusData[[1]], stringsAsFactors = FALSE)
scotusData <- scotusDoc['//table[@class="wikitable"]']
scotusTable <- readHTMLTable(scotusData[[1]], stringsAsFactors = FALSE)
scotusTable
library(rvest)
library(rvest)
install.packages("rvest")
temp <- scotusURL %>%
html %>%
html_nodes("table")
html_table(temp[1]) ## Just the "legend" table
html_table(temp[2]) ## The table you're interested in
temp <- scotusURL %>%
html %>%
html_nodes("table")
scotusURL %>%
html %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/table[2]') %>%
html_table
library(googlesheets)
install.packages("googlesheets")
library(XML)
library(ggplot2)
library(stringr)
library(reshape2)
library(data.table)
library(plyr)
library(RCurl)
library(googlesheets)
install.packages("googlesheets")
install.packages("googlesheets")
library(ggplot2)
library(plyr)
setwd("~/crime")
arrestRaw <- read.csv("BPD_Arrests.csv")
arrestRaw$District <- as.factor(toupper(arrestRaw$District))
arrestRaw$District[arrestRaw$District == ""] <- NA
arrestRaw$ArrestDate <- as.character(arrestRaw$ArrestDate)
arrestRaw$ArrestDate <- as.Date(arrestRaw$ArrestDate, format = "%m/%d/%Y")
arrestRaw$ArrestMonth <- format(arrestRaw$ArrestDate, format = "%Y/%m")
ggplot(data.frame(na.omit(arrestRaw)), aes(x = District)) +
geom_histogram(fill = "#0066FF") +
labs(title = "Arrests in Baltimore", x = "District", y = "Total") +
stat_bin(geom = "text", aes(label = ..count.., vjust = -1))
ggplot(data.frame(na.omit(arrestRaw)), aes(x = District), ymax = 9000) +
geom_histogram(fill = "#0066FF") +
labs(title = "Arrests in Baltimore", x = "District", y = "Total") +
stat_bin(geom = "text", aes(label = ..count.., vjust = -1))
ggplot(data.frame(na.omit(arrestRaw)), aes(x = District)) +
geom_histogram(fill = "#0066FF") +
labs(title = "Arrests in Baltimore", x = "District", y = "Total") +
stat_bin(geom = "text", aes(label = ..count.., vjust = -1), ymax = 9000)
ggplot(data.frame(na.omit(arrestRaw)), aes(x = District)) +
geom_histogram(fill = "#0066FF") +
labs(title = "Arrests in Baltimore", x = "District", y = "Total") +
stat_bin(geom = "text", aes(label = ..count.., vjust = -2))
?stat_bin
arrestMonthFreq <- as.data.frame(table(arrestRaw$ArrestMonth))
colnames(arrestMonthFreq) <- c("Date", "Total")
arrestMonthFreq$Date <- as.character(arrestMonthFreq$Date)
ggplot(arrestMonthFreq, aes(x = Date, y = Total)) +
geom_line(position = "identity", aes(group = 1)) +
labs(title = "Arrests in Baltimore (Jan 2013 - June 2015)", x = "Month", y = "Total Monthly Arrests") +
stat_smooth(method = "lm", se = TRUE, fill = "black", colour = "black", aes(group = 1))
